/**
 * x-enterleave.js - HTML attribute to add dynamic CSS modifier on classes
 * @version v0.1.9
 * @link https://github.com/jfroffice/x-enterleave.js
 * @license MIT
 */
"use strict";var am=am||{};am.viewport=function(){function e(e){var t=0;do isNaN(e.offsetTop)||(t+=e.offsetTop);while(e=e.offsetParent);return t}function t(){var e=window.document.documentElement.clientHeight,t=window.innerHeight;return t>e?t:e}return{isInside:function(n,r){var i=window.pageYOffset,a=t(),o=i+a,c=n.offsetHeight,s=e(n);return r=r||.5,s+c>=i+r*c&&o-r*c>=s||"fixed"==(n.currentStyle?n.currentStyle:window.getComputedStyle(n,null)).position}}}();var am=am||{};am.sequencer=function(e){function t(e,t,n){e.classList.remove(t),e.classList.contains(n)||e.classList.add(n)}return{init:function(e){return this.enterleave=e.enterleave,this.element=e.element,this},updateState:function(){var n=this.element;e.isInside(n)?t(n,"leave","enter"):t(n,"enter","leave")}}}(am.viewport);var am=am||{};am.start=function(e){function t(){n&&clearTimeout(n),n=setTimeout(function(){r.forEach(function(e){e.enterleave&&e.updateState()})},10)}var n,r=[];[].forEach.call(document.querySelectorAll("html"),function(n){var i=new MutationObserver(function(n){n.forEach(function(n){if(n.addedNodes.length||n.removedNodes.length){var i=document.querySelectorAll("[x-enterleave]");i.length!==r.length&&(r=[],[].forEach.call(i,function(t){r.push(Object.create(e).init({element:t,enterleave:!0}))}),t())}})});i.observe(n,{attributes:!0,childList:!0,characterData:!0,subtree:!0})}),window.addEventListener("resize",t),window.addEventListener("scroll",t)}(am.sequencer,am.viewport);