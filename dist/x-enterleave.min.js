/**
 * x-enterleave.js - HTML attribute to add dynamic CSS modifier on classes
 * @version v0.1.5
 * @link https://github.com/jfroffice/x-enterleave.js
 * @license MIT
 */
"use strict";var am=am||{};am.viewport=function(){function e(e){var t=0,n=0;do isNaN(e.offsetTop)||(t+=e.offsetTop),isNaN(e.offsetLeft)||(n+=e.offsetLeft);while(e=e.offsetParent);return{top:t,left:n}}function t(){var e=window.document.documentElement.clientHeight,t=window.innerHeight;return t>e?t:e}return{isInside:function(n,i){var r=window.pageYOffset,a=r+t(),o=n.offsetHeight,s=e(n).top,u=s+o;return i=i||.5,a>=s+o*i&&u>=r||"fixed"==(n.currentStyle?n.currentStyle:window.getComputedStyle(n,null)).position}}}();var am=am||{};am.sequencer=function(e){function t(e,t,n){e.classList.remove(t),e.classList.contains(n)||e.classList.add(n)}return{init:function(e){return this.enterleave=e.enterleave,this.element=e.element,this},updateState:function(){var n=this.element;e.isInside(n)?t(n,"leave","enter"):t(n,"enter","leave")}}}(am.viewport);var am=am||{};am.start=function(e){function t(){i&&clearTimeout(i),i=setTimeout(function(){n.forEach(function(e){e.enterleave&&e.updateState()})},10)}var n,i;return window.addEventListener("resize",t),window.addEventListener("scroll",t),function(){n=[],[].forEach.call(document.querySelectorAll("[x-enterleave]"),function(t){n.push(Object.create(e).init({element:t,enterleave:!0}))}),t()}}(am.sequencer,am.viewport);